{"version":3,"sources":["components/Header.js","components/MovieGridItem.js","store/actions/index.js","constants/index.js","components/MovieGrid.js","store/reducers/ErrorReducer.js","store/reducers/MoviesReducer.js","store/reducers/LoadingReducer.js","store/reducers/PageReducer.js","store/reducers/index.js","api/index.js","sagas/MoviesSaga.js","sagas/index.js","App.js","store/index.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","useStyles","makeStyles","root","maxWidth","media","height","card","padding","MovieGridItem","movie","classes","Grid","item","xs","sm","className","align","Card","CardActionArea","CardMedia","image","backdrop_path","title","CardContent","gutterBottom","component","color","overview","setMovies","movies","type","wrap","connect","isLoading","error","dispatch","ownProps","loadMovies","props","useEffect","container","map","onClick","ErrorReducer","state","action","MoviesReducer","LoadingReducer","PageReducer","rootReducer","combineReducers","nextPage","POPULAR_BASE_URL","fetchMovies","page","a","fetch","response","json","data","status","Error","errors","handleMoviesLoad","watcherSaga","getPage","select","call","put","results","toString","takeEvery","MoviesSaga","store","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","rootSaga","configureStore","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b0075b7.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Header() {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Typography variant=\"h6\">Movies</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 200\n  },\n  card:{\n    padding: '6px'\n  }\n});\n\nconst MovieGridItem = ({ movie }) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12} sm={3} className={classes.card} align=\"center\">\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={`http://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n            title=\"movie image\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {movie.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {movie.overview}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid >\n  )\n}\n\nexport default MovieGridItem\n","import { MOVIES_LOAD, MOVIES_LOAD_SUCCESS, MOVIES_LOAD_FAIL } from '../../constants';\n\nconst loadMovies = () => ({\n  type: MOVIES_LOAD\n})\n\nconst setMovies = (movies) => ({\n  type: MOVIES_LOAD_SUCCESS,\n  movies,\n})\n\nconst setError = (error) => ({\n  type: MOVIES_LOAD_FAIL,\n  error\n})\n\nexport {\n  loadMovies, setMovies, setError\n}\n","\nconst MOVIES_LOAD = 'MOVIES_LOAD'\nconst MOVIES_LOAD_SUCCESS = 'MOVIES_LOAD_SUCCESS'\nconst MOVIES_LOAD_FAIL = 'MOVIES_LOAD_FAIL'\n\n\nexport { MOVIES_LOAD, MOVIES_LOAD_SUCCESS, MOVIES_LOAD_FAIL };\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport MovieGridItem from \"./MovieGridItem\";\n\nimport { loadMovies } from '../store/actions';\n\nconst useStyles = makeStyles({\n    wrap: {\n        padding: '6px'\n    }\n});\n\nfunction MovieGrid(props) {\n    const classes = useStyles();\n    useEffect(() => {\n        props.loadMovies()\n    }, [])\n\n    const { movies } = props;\n\n    return (\n        <div>\n            <Grid container >\n                {movies.map(movie => (\n                    <MovieGridItem movie={movie} />\n                ))}\n            </Grid>\n            <button onClick={props.loadMovies}>Load more</button>\n\n        </div>\n    );\n}\n\n\nconst mapStateToProps = ({ isLoading, movies, error }) => ({\n    isLoading,\n    movies,\n    error\n})\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    loadMovies: () => dispatch(loadMovies())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieGrid);\n","import { MOVIES_LOAD, MOVIES_LOAD_SUCCESS, MOVIES_LOAD_FAIL } from '../../constants';\n\nconst ErrorReducer = (state = null, action) => {\n  switch (action.type) {\n    case MOVIES_LOAD:\n    case MOVIES_LOAD_SUCCESS:\n      return null;\n    case MOVIES_LOAD_FAIL:\n      return action.error;\n    default:\n      return state;\n  }\n}\n\n\nexport default ErrorReducer;\n","import { MOVIES_LOAD_SUCCESS, MOVIES_LOAD_FAIL } from '../../constants';\n\nconst MoviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case MOVIES_LOAD_FAIL:\n      return [];\n    case MOVIES_LOAD_SUCCESS:\n      return [\n        ...state,\n        ...action.movies\n      ];\n    default:\n      return state;\n  }\n}\n\n\nexport default MoviesReducer;\n","import { MOVIES_LOAD, MOVIES_LOAD_SUCCESS, MOVIES_LOAD_FAIL } from '../../constants';\n\nconst LoadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case MOVIES_LOAD:\n      return true;\n    case MOVIES_LOAD_SUCCESS:\n      return false;\n    case MOVIES_LOAD_FAIL:\n      return false;\n    default:\n      return state;\n  }\n}\n\n\nexport default LoadingReducer;\n","import { MOVIES_LOAD_SUCCESS } from '../../constants';\n\nconst PageReducer = (state = 1, action) => {\n  switch (action.type) {\n    case MOVIES_LOAD_SUCCESS:\n      return state + 1;\n    default:\n      return state;\n  }\n}\n\n\nexport default PageReducer;\n","import { combineReducers } from 'redux';\n\nimport ErrorReducer from './ErrorReducer'\nimport MoviesReducer from './MoviesReducer'\nimport LoadingReducer from './LoadingReducer'\nimport PageReducer from './PageReducer'\n\nconst rootReducer = combineReducers({\n  isLoading: LoadingReducer,\n  movies: MoviesReducer,\n  error: ErrorReducer,\n  nextPage: PageReducer\n})\n\nexport default rootReducer;\n","\nconst key = '5f96323678d05ff0c4eb264ef184556868e303b32a2db88ecbf15746e6f25e02';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8c091fdef8a76783449bf5cf029b8265';\n\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst fetchMovies = async (page) => {\n  const response = await fetch(`${POPULAR_BASE_URL}&page=${page}`);\n  const data = await response.json();\n  if (data.status >= 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n\n}\n\nexport { fetchMovies };\n","import { takeEvery, put, select, call } from 'redux-saga/effects';\nimport { MOVIES_LOAD } from '../constants';\nimport { fetchMovies } from '../api';\nimport { setMovies, setError } from '../store/actions';\n\nconst getPage = state => state.nextPage;\n\nfunction* handleMoviesLoad() {\n  try {\n    const page = yield select(getPage);\n    const movies = yield call(fetchMovies, page);\n\n    yield put(setMovies(movies.results));\n  } catch (err) {\n    yield put(setError(err.toString()))\n  }\n}\n\n// Watcher saga\nfunction* watcherSaga() {\n  yield takeEvery(MOVIES_LOAD, handleMoviesLoad);\n}\n\nexport default watcherSaga;\n\n\n// Watches saga -> (listens to) actions ->(invokes) Worker Sagas.\n","import MoviesSaga from './MoviesSaga';\n\nexport default MoviesSaga;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport MovieGrid from './components/MovieGrid';\n\nimport configureStore from './store';\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div>\n          <Header />\n          <MovieGrid />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(sagaMiddleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  )\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}